{"version":3,"sources":["js/task1.js","index.js"],"names":["delay","ms","Promise","resolve","reject","setTimeout","logger","time","console","log","then"],"mappings":";AAWO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,OAAA,QAAA,WAAA,EAXC,MAAMA,EAAQC,GACb,IAAIC,QAAQ,CAACC,EAASC,KAC3BC,WAAW,KAEPF,EAASF,IAEVA,KAKA,QAAA,MAAA,EAAA,MAAMK,EAASC,GAAQC,QAAQC,sBAAsBF,OAArD,QAAA,OAAA;;ACLmB,aAL1B,IAAA,EAAA,QAAA,eAGA,EAAM,EAAA,OAAA,KAAMG,KAAKJ,EAAjB,SACA,EAAM,EAAA,OAAA,KAAMI,KAAKJ,EAAjB,SACA,EAAM,EAAA,OAAA,MAAMI,KAAKJ,EAAjB","file":"src.185c9760.js","sourceRoot":"../src","sourcesContent":[" export const delay = ms => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (true){\n        resolve (ms)\n      }\n    }, ms)\n  })\n};\n\n\nexport const logger = time => console.log(`Resolved after ${time}ms`);\n\n","\nimport { delay, logger } from './js/task1'\n\n\ndelay(2000).then(logger); // Resolved after 2000ms\ndelay(1000).then(logger); // Resolved after 1000ms\ndelay(1500).then(logger); // Resolved after 1500ms"]}